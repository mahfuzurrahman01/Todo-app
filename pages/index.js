import Head from 'next/head'
import { Inter } from '@next/font/google'
import AddedList from '../Components/AddedList'
import { useEffect, useState } from 'react'
import { MILESTONE } from '../url'
import { toastFunction } from '../Components/Toast'
const inter = Inter({ subsets: ['latin'] })
const axios = require('axios');

export default function Home() {
  //this state will help to fetch the data again after saving any data 
  const [dataSave, setDataSave] = useState(0)
  const [milestone, setMilestone] = useState([])
  // error handling state 
  const [isError, setIsError] = useState("")
  //this function will give the milestone
  const getData = async () => {
    try {
      const response = await axios.get(MILESTONE)
      setMilestone(response.data)
      console.log(response.data)
    }
    catch (error) {
      setIsError(error.message)
    }

  }


  useEffect(() => {
    setIsError("")
    getData()
  }, [dataSave])

  const handleSubmit = (event) => {

    event.preventDefault()
    const goal = event.target.text.value;
    const time = event.target.time.value;
    const date = event.target.date.value;

    // validate that goal and time both is sated 
    if (goal === '' || goal === undefined || time === '' || time === undefined || date === '' || date === undefined) {
      toastFunction('error', 'Sorry you have to set both GOAL, DATE and TIME')
      return
    }

    const body = { todo: goal,date: date, time: time, listingNo: milestone.length + 1,complete: false }
    console.log(body)
    axios.post('https://todo-server-theta-seven.vercel.app/milestone', body)
      .then(function (response) {
        console.log(response);
        if (response.data.acknowledged === true) {
          toastFunction('success', 'Successfully Added')
          setDataSave(dataSave + 1)
        }

      })
      .catch(function (error) {
        console.log(error);
      });
    setGoalLength(0)
    event.target.reset()

  }

  const [goalLength, setGoalLength] = useState(0)
  // this function will validate input section that user have to set a goal under limited word
  const goalInputSection = (event) => {
    event.preventDefault()
    const goal = event.target.value;
    setGoalLength(goal.length)
  }

  const [backspaceCount, setBackspaceCount] = useState(0);
  const handleKeyPress = (event) => {
    const key = event.key;
    

    if (key === 'Backspace') {
      setBackspaceCount(backspaceCount + 1);
      console.log(`Backspace key pressed ${backspaceCount + 1} times.`);
    } else {
      console.log(`Pressed key: ${key}`);
    }
  };
  const minDate = new Date().toISOString().split('T')[0];
  console.log(minDate)
  return (
    <>

      <Head>
        <title>Practice CRUD operation</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='lg:w-4/5 w-11/12 min-h-screen mx-auto md:p-8 p-2 flex md:justify-center justify-start flex-col  gap-2'>
      
        <div className='lg:w-3/6 md:w-11/12 w-[95%] p-5 rounded-lg bg-opacity-30 bg-slate-100 mx-auto mt-8 flex justify-center flex-col md:items-center items-start'>
          <form onSubmit={handleSubmit} className='relative w-full flex flex-col justify-center items-center gap-2'>
            <p className={`absolute top-2 lg:right-24 md:right-28 right-2 ${goalLength === 0 && 'text-gray-400'} ${goalLength > 0 && goalLength < 30 && 'text-green-500'} ${goalLength === 30 && 'text-red-500'}  text-sm`}>{goalLength}/30</p>
            <input type="text" name="text" onChange={goalInputSection} maxLength="30" id="text" className='md:w-4/6 w-full md:text-base text-sm rounded-lg px-5 py-2 outline-none'
            onKeyPress={handleKeyPress} placeholder='Enter your goal' />
            <input type="date" min={minDate} name="date" id="date" className='md:w-4/6 w-full md:text-base text-sm rounded-lg px-5 py-2 outline-none' placeholder='Enter time' />
            <input type="time" name="time" id="time" className='md:w-4/6 w-full md:text-base text-sm rounded-lg px-5 py-2 outline-none' placeholder='Enter time' />
            <button type='submit' className='px-10 py-2 rounded bg-orange-400 hover:bg-orange-500 duration-300 text-white mt-4'>Add</button>
          </form>
        </div>
        <div>
          {
            isError !== '' && <p className='text-center mt-3 text-xl text-red-500'>{isError}</p>
          }
        </div>
        {
          milestone.length > 0 && <AddedList data={milestone} setDataSave={setDataSave} />
        }
      </main>

    </>
  )
}
